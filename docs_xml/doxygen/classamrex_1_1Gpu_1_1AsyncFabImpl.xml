<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Gpu_1_1AsyncFabImpl" kind="class" language="C++" prot="public">
    <compoundname>amrex::Gpu::AsyncFabImpl</compoundname>
    <includes refid="AMReX__GpuAsyncFabImpl_8H" local="no">AMReX_GpuAsyncFabImpl.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a3bdfefb4f91b8431e5d811a02c337b78" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref></type>
        <definition>FArrayBox amrex::Gpu::AsyncFabImpl::m_cpu_fab</definition>
        <argsstring></argsstring>
        <name>m_cpu_fab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a17cf7cf1ef1efb30be7ede5d029de66c" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox* amrex::Gpu::AsyncFabImpl::m_cpu_fab_alias</definition>
        <argsstring></argsstring>
        <name>m_cpu_fab_alias</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1ac98ad9fb1cbe8067b7f5edf273af0342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>()</argsstring>
        <name>AsyncFabImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a643a8d0a07c3d8c2e0804277299b05d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="186" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1ac8a0d7545121df86738bd6e80fc743a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(FArrayBox &amp;a_fab)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a31cb10622cc7360e20ad6b0694cbb3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(FArrayBox &amp;a_fab, Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a2518373e6edd2e4aba7a167b3f439507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::~AsyncFabImpl</definition>
        <argsstring>()</argsstring>
        <name>~AsyncFabImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="18" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a786789c3e5d6fa85a11ba7f94ad42b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(AsyncFabImpl const &amp;)=delete</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1ae3a1a5dbce8d0182e02805a7b18dd39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFabImpl::operator=</definition>
        <argsstring>(AsyncFabImpl const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a633f256ade4ca1ebfc5d4828749681be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox * amrex::Gpu::AsyncFabImpl::fabPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>fabPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a7ecccc65583535c9ee93ba41b25489d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox &amp; amrex::Gpu::AsyncFabImpl::hostFab</definition>
        <argsstring>() noexcept</argsstring>
        <name>hostFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="201" bodyend="201"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1acc8363c22dca4cf942f3e8c9443b942e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFabImpl::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFabImpl_1a8f3581ae78e32856d53a45cf2e0c0fe8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFabImpl::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.cpp" bodystart="182" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="596">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="597">
        <label>amrex::BaseFabData&lt; Real &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="598" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="599">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="599" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="602">
        <label>Real</label>
      </node>
      <node id="598">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="599" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="600">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="601">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="594">
        <label>amrex::Gpu::AsyncFabImpl</label>
        <link refid="classamrex_1_1Gpu_1_1AsyncFabImpl"/>
        <childnode refid="595" relation="usage">
          <edgelabel>m_cpu_fab_alias</edgelabel>
          <edgelabel>m_cpu_fab</edgelabel>
        </childnode>
      </node>
      <node id="595">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="596" relation="public-inheritance">
        </childnode>
        <childnode refid="601" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="602" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" line="11" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFabImpl.H" bodystart="10" bodyend="44"/>
    <listofallmembers>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1ac98ad9fb1cbe8067b7f5edf273af0342" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a643a8d0a07c3d8c2e0804277299b05d5" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1ac8a0d7545121df86738bd6e80fc743a3" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a31cb10622cc7360e20ad6b0694cbb3ef" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a786789c3e5d6fa85a11ba7f94ad42b24" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a633f256ade4ca1ebfc5d4828749681be" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a8f3581ae78e32856d53a45cf2e0c0fe8" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a7ecccc65583535c9ee93ba41b25489d3" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>hostFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1acc8363c22dca4cf942f3e8c9443b942e" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a3bdfefb4f91b8431e5d811a02c337b78" prot="private" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>m_cpu_fab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a17cf7cf1ef1efb30be7ede5d029de66c" prot="private" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>m_cpu_fab_alias</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1ae3a1a5dbce8d0182e02805a7b18dd39a" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFabImpl_1a2518373e6edd2e4aba7a167b3f439507" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFabImpl</scope><name>~AsyncFabImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
