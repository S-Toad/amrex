<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Gpu_1_1AsyncFab" kind="class" language="C++" prot="public">
    <compoundname>amrex::Gpu::AsyncFab</compoundname>
    <includes refid="AMReX__GpuAsyncFab_8H" local="no">AMReX_GpuAsyncFab.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1AsyncFab_1a3692ef0f05be4a0bb15e4b105a11c530" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Gpu_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> *</type>
        <definition>AsyncFabImpl* amrex::Gpu::AsyncFab::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Gpu_1_1AsyncFab_1a98a4ea7c26c699bd38ee76c850e70fb9" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox* amrex::Gpu::AsyncFab::m_fab</definition>
        <argsstring></argsstring>
        <name>m_fab</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a264e43e59b31831fdfad5f926ee41e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>()</argsstring>
        <name>AsyncFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1ab2f3655ca639123795a3c87771d815f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>(Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="21" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a63f3148639c194018713f093f60e36b0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>(FArrayBox &amp;a_fab)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1ab09ead1f5bd992f431f99a7d854b9e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>(FArrayBox &amp;a_fab, Box const &amp;bx, int comp)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a00b6710c924cbc3058eb9f847743e473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>(AsyncFab const &amp;rhs)=delete</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1AsyncFab" kindref="compound">AsyncFab</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1abb43dfd9b1488ece0698ddc7fb8170e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::AsyncFab::AsyncFab</definition>
        <argsstring>(AsyncFab &amp;&amp;rhs)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1AsyncFab" kindref="compound">AsyncFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a86299d2c9e6654627c7e59b4d408f0f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Gpu::AsyncFab::~AsyncFab</definition>
        <argsstring>()</argsstring>
        <name>~AsyncFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a89cd4beb2153a976ab0285ff4502037a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFab::operator=</definition>
        <argsstring>(AsyncFab const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Gpu_1_1AsyncFab" kindref="compound">AsyncFab</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a72044b493075b6e89e3a19d5f0d1310d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFab::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="65" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a0f5da2b73e2db353d47935594271522a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>AMREX_GPU_HOST_DEVICE FArrayBox* amrex::Gpu::AsyncFab::fabPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>fabPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1ae8a3000e276a90ffef7128acfc5e468b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE FArrayBox&amp; amrex::Gpu::AsyncFab::fab</definition>
        <argsstring>() const noexcept</argsstring>
        <name>fab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a3d92324ac156c433725f930a47cee506" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox &amp; amrex::Gpu::AsyncFab::hostFab</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hostFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a07327afa9abcc1f89dd204cf73a83825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const  &gt;</type>
        <definition>Array4&lt; Real const  &gt; amrex::Gpu::AsyncFab::array</definition>
        <argsstring>() const noexcept</argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a486d033ea5d20c1a5dfb94457d2b49c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;</type>
        <definition>Array4&lt; Real &gt; amrex::Gpu::AsyncFab::array</definition>
        <argsstring>() noexcept</argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a229ac294a3135a16d28b02fd4df65dac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFab::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="53" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Gpu_1_1AsyncFab_1a20b02276932a2a411356a4ee037c3481" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::AsyncFab::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="586">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="587">
        <label>amrex::BaseFabData&lt; Real &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="588" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="589">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="589" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="592">
        <label>Real</label>
      </node>
      <node id="588">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="589" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="590" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="583">
        <label>amrex::Gpu::AsyncFab</label>
        <link refid="classamrex_1_1Gpu_1_1AsyncFab"/>
        <childnode refid="584" relation="usage">
          <edgelabel>m_impl</edgelabel>
        </childnode>
        <childnode refid="585" relation="usage">
          <edgelabel>m_fab</edgelabel>
        </childnode>
      </node>
      <node id="590">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="591">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="584">
        <label>amrex::Gpu::AsyncFabImpl</label>
        <link refid="classamrex_1_1Gpu_1_1AsyncFabImpl"/>
        <childnode refid="585" relation="usage">
          <edgelabel>m_cpu_fab_alias</edgelabel>
          <edgelabel>m_cpu_fab</edgelabel>
        </childnode>
      </node>
      <node id="585">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="586" relation="public-inheritance">
        </childnode>
        <childnode refid="591" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="592" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuAsyncFab.H" bodystart="16" bodyend="59"/>
    <listofallmembers>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a07327afa9abcc1f89dd204cf73a83825" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>array</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a486d033ea5d20c1a5dfb94457d2b49c9" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>array</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a264e43e59b31831fdfad5f926ee41e1d" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1ab2f3655ca639123795a3c87771d815f4" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a63f3148639c194018713f093f60e36b0" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1ab09ead1f5bd992f431f99a7d854b9e0a" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a00b6710c924cbc3058eb9f847743e473" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1abb43dfd9b1488ece0698ddc7fb8170e6" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a72044b493075b6e89e3a19d5f0d1310d" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>clear</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1ae8a3000e276a90ffef7128acfc5e468b" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>fab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a0f5da2b73e2db353d47935594271522a" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a20b02276932a2a411356a4ee037c3481" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a3d92324ac156c433725f930a47cee506" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>hostFab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a229ac294a3135a16d28b02fd4df65dac" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a98a4ea7c26c699bd38ee76c850e70fb9" prot="private" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>m_fab</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a3692ef0f05be4a0bb15e4b105a11c530" prot="private" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>m_impl</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a89cd4beb2153a976ab0285ff4502037a" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Gpu_1_1AsyncFab_1a86299d2c9e6654627c7e59b4d408f0f6" prot="public" virt="non-virtual"><scope>amrex::Gpu::AsyncFab</scope><name>~AsyncFab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
