<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__EBAmrUtil__F_8H" kind="file" language="C++">
    <compoundname>AMReX_EBAmrUtil_F.H</compoundname>
    <includes refid="AMReX__BLFort_8H" local="no">AMReX_BLFort.H</includes>
    <includedby refid="AMReX__EBAmrUtil_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</includedby>
    <incdepgraph>
      <node id="41822">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil_F.H</label>
        <link refid="AMReX_EBAmrUtil_F.H"/>
        <childnode refid="41823" relation="include">
        </childnode>
      </node>
      <node id="41823">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="41824" relation="include">
        </childnode>
        <childnode refid="41825" relation="include">
        </childnode>
        <childnode refid="41827" relation="include">
        </childnode>
      </node>
      <node id="41824">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="41825" relation="include">
        </childnode>
      </node>
      <node id="41827">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="41826">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="41825">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="41826" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41828">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil_F.H</label>
        <link refid="AMReX_EBAmrUtil_F.H"/>
        <childnode refid="41829" relation="include">
        </childnode>
      </node>
      <node id="41829">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__EBAmrUtil__F_8H_1a057e4e257a1fb02e74a85d21acbcad46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_tag_cutcells</definition>
        <argsstring>(const int *lo, const int *hi, char *tag, const int *tlo, const int *thi, const void *flag, const int *flo, const int *fhi, char tagval, char clearval)</argsstring>
        <name>amrex_tag_cutcells</name>
        <param>
          <type>const int *</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>tlo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>thi</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>flo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>fhi</declname>
        </param>
        <param>
          <type>char</type>
          <declname>tagval</declname>
        </param>
        <param>
          <type>char</type>
          <declname>clearval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil_F.H" line="10" column="1"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__EBAmrUtil__F_8H_1a1c07ce71e99812abe872dbb49b165025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_tag_volfrac</definition>
        <argsstring>(const int *lo, const int *hi, char *tag, const int *tlo, const int *thi, const void *vfrac, const int *vlo, const int *vhi, char tagval, char clearval, amrex::Real tol)</argsstring>
        <name>amrex_tag_volfrac</name>
        <param>
          <type>const int *</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>tlo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>thi</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>vfrac</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>vlo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>vhi</declname>
        </param>
        <param>
          <type>char</type>
          <declname>tagval</declname>
        </param>
        <param>
          <type>char</type>
          <declname>clearval</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil_F.H" line="15" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_EBAMRUTIL_F_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_EBAMRUTIL_F_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLFort_8H" kindref="compound">AMReX_BLFort.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__EBAmrUtil__F_8H_1a057e4e257a1fb02e74a85d21acbcad46" kindref="member">amrex_tag_cutcells</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hi,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>tlo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>thi,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>flag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>flo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>fhi,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tagval,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>clearval);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AMReX__EBAmrUtil__F_8H_1a1c07ce71e99812abe872dbb49b165025" kindref="member">amrex_tag_volfrac</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>lo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hi,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>tlo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>thi,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vfrac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vlo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vhi,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tagval,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>clearval,<sp/>amrex::Real<sp/>tol);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil_F.H"/>
  </compounddef>
</doxygen>
